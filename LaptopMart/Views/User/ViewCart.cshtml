@using LaptopMart.ViewModels
@model IEnumerable<LaptopMart.ViewModels.CartItemViewModel>

@{
    ViewBag.Title = "title";

}

<table id="cart-item" class="table table-bordered table-hover">
    <thead>
        <tr>
            <th></th>
            <th>Name</th>
            <th>Price</th>
            <th>Quantity</th>
            <th>Total</th>
            <th></th>

        </tr>
    </thead>
    <tbody>
        @{ decimal total = 0;}
        @foreach (CartItemViewModel cartItem in Model)
        {
            <tr>
                <td><img src="~/Content/ProductImages/@cartItem.Image" height="50px" width="50px" /></td>
                <td>@cartItem.Name</td>
                <td>@cartItem.Price per item</td>
                <td>
                    <button id="btn+@cartItem.CartItemId" class="btn-sm btn-default" onClick="addItem(@cartItem.CartItemId)">+</button> @Html.TextBox("Quantity", Convert.ToString(cartItem.Quantity), new { @class = "numeric", @id = "txt-box-" + cartItem.CartItemId, type = "text" })
                    <button id="btn-@cartItem.CartItemId" class="btn-sm btn-default" onClick="removeItem(@cartItem.CartItemId)">-</button>
                </td>
                <td>@(total += cartItem.Price * cartItem.Quantity)</td>
                <td><a class="btn btn-danger" href="/user/RemoveCartItem?cartId=@cartItem.CartItemId">Remove</a></td>

            </tr>
        }
    </tbody>

</table>

<p>TOTAL = @total</p>
@if (Model.Count() > 0)
{
    <a class="btn btn-danger" href="/User/Checkout/@Model.ElementAt(0).CartId">Purchase</a>
}

@section scripts
{
    <script>

        function reload(quantity, cartItemId) {

            $.ajax({
                url: "/api/user/UpdateCart",
                type: "POST",
                contentType: "application/json; charset=utf-8",

                data: JSON.stringify({ Quantity: quantity, CartItemId: cartItemId }),
                success: function () {
                    window.location.href = "/user/ViewCart";
                }

            });
        }

        function addItem(cartItemId) {
            var quantity = parseInt(document.getElementById("txt-box-" + cartItemId).value);
            quantity++;
            document.getElementById("txt-box-" + cartItemId).value = quantity;

            reload(quantity, cartItemId);
        }

        function removeItem(cartItemId) {
            var quantity = parseInt(document.getElementById("txt-box-" + cartItemId).value);
            if (quantity > 1) {
                quantity--;
                document.getElementById("txt-box-" + cartItemId).value = quantity;
                reload(quantity, cartItemId);
            }

        }

        var specialKeys = new Array();
        specialKeys.push(8); //Backspace
        $(function () {
            $(".numeric").bind("keypress", function (e) {
                var keyCode = e.which ? e.which : e.keyCode;
                var ret = ((keyCode >= 49 && keyCode <= 57) || specialKeys.indexOf(keyCode) != -1);
                $(".error").css("display", ret ? "none" : "inline");
                return ret;
            });
            $(".numeric").bind("paste", function (e) {
                return false;
            });
            $(".numeric").bind("drop", function (e) {
                return false;
            });
        });
        $(document).ready(function () {

            $("#cart-item").DataTable();

            $(".numeric").on("input", function (e) {
                var value = $(this).val();
                if ($(this).data("lastval") != value) {

                    $(this).data("lastval", value);
                    var theNum = $(this).attr('id').replace(/^\D+/g, '');
                    theNum = parseInt(theNum);
                    reload(value, theNum);

                };
            });


        });
    </script>
}